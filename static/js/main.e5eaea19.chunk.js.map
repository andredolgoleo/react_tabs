{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","classNames","onClick","handleClick","href","title","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIJ,IAAkBI,EAAIC,OAAON,EAAK,GAMvE,OACE,mCACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBAEEE,UAAWE,IACTJ,EAAIC,KAAOL,GAAiB,aAE9B,UAAQ,MALV,SAOE,mBACES,QAAS,kBAlBL,SAACL,GAAD,OAClBA,EAAIC,KAAOL,GAAiBC,EAAcG,GAiBbM,CAAYN,IAC3BO,KAAI,WAAMP,EAAIC,IACd,UAAQ,UAHV,SAKGD,EAAIQ,SAXFR,EAAIC,WAkBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYW,gBCxCVd,EAAc,CACzB,CAAEM,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAAShB,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBgB,EAAtB,KAEMd,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIJ,IAAkBI,EAAIC,OAAON,EAAK,GAIvE,OACE,qCACE,oBAAIO,UAAU,QAAd,mCACsBJ,EAAYU,SAElC,qBAAKN,UAAU,UAAf,SACE,cAAC,EAAD,CACEP,KAAMA,EACNC,cAAeA,EACfC,cAXc,SAACG,GAAD,OAAcY,EAAiBZ,EAAIC,aCf3DY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e5eaea19.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string,\n  onTabSelected: (value: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(tab => selectedTabId === tab.id) || tabs[0];\n\n  const handleClick = (tab: Tab) => (\n    tab.id !== selectedTabId && onTabSelected(tab)\n  );\n\n  return (\n    <>\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map(tab => (\n              <li\n                key={tab.id}\n                className={classNames(\n                  tab.id === selectedTabId && 'is-active',\n                )}\n                data-cy=\"Tab\"\n              >\n                <a\n                  onClick={() => handleClick(tab)}\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                >\n                  {tab.title}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {selectedTab.content}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const selectedTab = tabs.find(tab => selectedTabId === tab.id) || tabs[0];\n\n  const onTabSelected = (tab: Tab) => setSelectedTabId(tab.id);\n\n  return (\n    <>\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n      <div className=\"section\">\n        <Tabs\n          tabs={tabs}\n          selectedTabId={selectedTabId}\n          onTabSelected={onTabSelected}\n        />\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}